properties:
- name: align
  type: enum
  important: false
  options: [left, center, right]
  description: The position of this dropdown in the available space
  group: Style
- {name: background, type: color, default_value: '', important: false, description: background color of the component,
  group: Style}
- {name: bold, type: boolean, default_value: false, important: false, description: Display this component’s text in bold,
  group: Style}
- {name: border, type: string, default_value: '', important: false, description: The border of this component. Can take any valid CSS border value,
  group: Style}
- {name: enabled, type: boolean, default_value: true, important: true, description: True if this component should allow user interaction,
  group: Attributes}
- {name: font, type: string, default_value: '', important: false, description: The font family to use for this component,
  group: Style}
- {name: font_size, type: number, important: false, description: The height of text displayed on this component in pixels,
  group: Style}
- {name: text_color, type: color, default_value: '', important: false, description: Component's Input Text Color,
  group: Style}
- {name: include_placeholder, type: boolean, default_value: true, important: true,
  description: Whether to add a placeholder item to the list with value None, group: Attributes}
- {name: italic, type: boolean, default_value: false, important: false, description: Display this component’s text in italics,
  group: Style}
- name: items
  type: text[]
  default_value: []
  important: true
  description: The items to display in this dropdown
  group: Attributes
  default_binding_prop: true
- {name: placeholder, type: string, default_value: '', important: true, description: The text to be displayed when the selected_value is None,
  group: Attributes}
- name: appearance
  type: enum
  important: true
  options: ['', outlined]
  description: Selection field's appearance
  group: Style
- {name: selected_value, type: object, important: true, description: The value of the currently selected item. Can only be set at runtime,
  group: Attributes}
- {name: underline, type: boolean, default_value: false, important: false, description: Display this component’s text underlined,
  group: Style}
- {name: visible, type: boolean, default_value: true, important: true, description: Should this component be displayed,
  group: Style}
- {name: width, type: string, default_value: '', important: false, description: 'The
    width of this DropDown, or “default” to have the width set by the container',
  group: Style}
is_package: true
events:
- {name: change, default_event: true, description: when an item is selected}
custom_component: true
components:
- name: menu
  properties: {visible: true}
  type: form:Components.Menu
  layout_properties: {slot: anvil-m3-dropdownMenu-slot}
  components:
  - name: menu_item_1
    properties: {text: test test this will go away}
    type: form:Components.Menu.MenuItem
    layout_properties: {slot: anvil-m3-menu-slot}
- name: selection_field
  properties: {trailing_icon: arrow_drop_down, appearance: '', enabled: true, label_text: Label,
    placeholder: Select Item, supporting_text: ' '}
  type: form:Components.TextField
  layout_properties: {slot: anvil-m3-dropdownMenu-textfield}
container:
  type: HtmlTemplate
  properties: {html: "<div anvil-name=\"anvil-m3-dropdownMenu-component\"  style=\"\
      display:flex\">\n  <div anvil-name=\"anvil-m3-dropdownMenu-container\" class=\"\
      anvil-m3-dropdownMenu-container\" >\n  <!-- could put shield over this to prevent\
      \ typing??? -->\n    <div anvil-slot=\"anvil-m3-dropdownMenu-textfield\" anvil-name=\"\
      anvil-m3-dropdownMenu-textfield\" class=\"anvil-m3-dropdownMenu-textfield\"\
      \ anvil-slot-internal> </div>\n    \n    <div anvil-slot=\"anvil-m3-dropdownMenu-slot\"\
      \ anvil-name=\"anvil-m3-dropdownMenu-items-container\" \n        class=\"anvil-m3-menu-items-container\"\
      \ anvil-slot-internal>\n    </div>\n  </div>\n</div>\n\n<!-- \n\n<div anvil-name=\"\
      anvil-m3-buttonMenu-container\" class=\"anvil-m3-buttonMenu-container\">\n \
      \ <div anvil-slot=\"button\" anvil-slot-internal></div> \n  \n  <div anvil-slot=\"\
      anvil-m3-buttonMenu-slot\" anvil-name=\"anvil-m3-buttonMenu-items-container\"\
      \ \n    class=\"anvil-m3-buttonMenu-items-container anvil-m3-buttonMenu-items-hidden\"\
      >\n      <p anvil-if-slot-empty=\"anvil-m3-buttonMenu-slot\" style=\"color:\
      \ #BBB;\"><i>Menu items go here</i></p>\n  </div>\n</div> -->", visible: true}
custom_component_container: true
